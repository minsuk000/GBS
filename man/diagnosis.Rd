% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diagnosis.R
\name{diagnosis}
\alias{diagnosis}
\title{Generative Bootstrap Sampler for Logisti Regression Model}
\usage{
diagnosis(alpha_cand, theta_alpha)
}
\arguments{
\item{alpha_cand}{the weight of interest: M X S matrix}

\item{theta_alpha}{the bootstrapped estimator by the weight of interest}
}
\value{
\item{alpha_cand}{}
\item{theta_alpha}{}
\item{G_alpha}{bootstrapped estimator corresponding to w via GBS}
\item{L2}{L2 discrepancy between the conventional and the GBS boostapped estimators}
\item{L1}{L1 discrepancy between the conventional and the GBS boostapped estimators}
}
\description{
A tool of optimization convergence diagnosis for the trained generator.
}
\details{
}
\examples{
#### data generation
library(GBS)
set.seed(72394)
n=200
p=10
bt0 = seq(-6,6,length.out = p)
X = matrix(rnorm(n*p),n,p)
mu0 = X%*%bt0
y = matrix(rbinom(n,1,1/(1+exp(-mu0))),n,1)
fit_glm = glm(y~0+X, family=binomial())
theta = fit_glm$coefficients
#################### evaluate conventional bootstrap for given weights
S = 100
A = matrix(0,n,S)
n_b = n/S
for(h in 1:S){
  id = ((h-1)*n_b+1):(h*n_b)
  A[id,h] = 1
}
M=5
alpha_cand = matrix(rexp(M*S),M,S)
theta_alpha = matrix(0,M,p)
#for(m in 1:M){
#  alpha = matrix(alpha_cand[m,],1,S)
#  alpha = alpha/mean(alpha)
#  w = as.vector(A %*% t(alpha))
#  theta_alpha[m,] = glm( y ~ 0 + X, family=binomial(), weights=w)$coefficients
#}
#diag = diagnosis(alpha_cand, theta_alpha)
#print(diag)
}
\seealso{
GBS, GBS_custom
}
\author{
Minsuk Shin and Jun Liu
}
